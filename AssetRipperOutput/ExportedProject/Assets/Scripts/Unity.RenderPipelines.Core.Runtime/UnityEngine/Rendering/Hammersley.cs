namespace UnityEngine.Rendering
{
	internal static class Hammersley
	{
		[GenerateHLSL(PackingRules.Exact, true, false, false, 1, false, false, false, -1, ".\\Library\\PackageCache\\com.unity.render-pipelines.core@14.0.8\\Runtime\\ShaderLibrary\\Sampling\\Hammersley.cs", needAccessors = false, generateCBuffer = true)]
		private struct Hammersley2dSeq16
		{
			[HLSLArray(16, typeof(Vector4))]
			public unsafe fixed float hammersley2dSeq16[64];
		}

		[GenerateHLSL(PackingRules.Exact, true, false, false, 1, false, false, false, -1, ".\\Library\\PackageCache\\com.unity.render-pipelines.core@14.0.8\\Runtime\\ShaderLibrary\\Sampling\\Hammersley.cs", needAccessors = false, generateCBuffer = true)]
		private struct Hammersley2dSeq32
		{
			[HLSLArray(32, typeof(Vector4))]
			public unsafe fixed float hammersley2dSeq32[128];
		}

		[GenerateHLSL(PackingRules.Exact, true, false, false, 1, false, false, false, -1, ".\\Library\\PackageCache\\com.unity.render-pipelines.core@14.0.8\\Runtime\\ShaderLibrary\\Sampling\\Hammersley.cs", needAccessors = false, generateCBuffer = true)]
		private struct Hammersley2dSeq64
		{
			[HLSLArray(64, typeof(Vector4))]
			public unsafe fixed float hammersley2dSeq64[256];
		}

		[GenerateHLSL(PackingRules.Exact, true, false, false, 1, false, false, false, -1, ".\\Library\\PackageCache\\com.unity.render-pipelines.core@14.0.8\\Runtime\\ShaderLibrary\\Sampling\\Hammersley.cs", needAccessors = false, generateCBuffer = true)]
		private struct Hammersley2dSeq256
		{
			[HLSLArray(256, typeof(Vector4))]
			public unsafe fixed float hammersley2dSeq256[1024];
		}

		private static float[] k_Hammersley2dSeq16 = new float[64]
		{
			0f, 0f, 0f, 0f, 0.0625f, 0.5f, 0f, 0f, 0.125f, 0.25f,
			0f, 0f, 0.1875f, 0.75f, 0f, 0f, 0.25f, 0.125f, 0f, 0f,
			0.3125f, 0.625f, 0f, 0f, 0.375f, 0.375f, 0f, 0f, 0.4375f, 0.875f,
			0f, 0f, 0.5f, 0.0625f, 0f, 0f, 0.5625f, 0.5625f, 0f, 0f,
			0.625f, 0.3125f, 0f, 0f, 0.6875f, 0.8125f, 0f, 0f, 0.75f, 0.1875f,
			0f, 0f, 0.8125f, 0.6875f, 0f, 0f, 0.875f, 0.4375f, 0f, 0f,
			0.9375f, 0.9375f, 0f, 0f
		};

		private static float[] k_Hammersley2dSeq32 = new float[128]
		{
			0f,
			0f,
			0f,
			0f,
			1f / 32f,
			0.5f,
			0f,
			0f,
			0.0625f,
			0.25f,
			0f,
			0f,
			3f / 32f,
			0.75f,
			0f,
			0f,
			0.125f,
			0.125f,
			0f,
			0f,
			5f / 32f,
			0.625f,
			0f,
			0f,
			0.1875f,
			0.375f,
			0f,
			0f,
			7f / 32f,
			0.875f,
			0f,
			0f,
			0.25f,
			0.0625f,
			0f,
			0f,
			9f / 32f,
			0.5625f,
			0f,
			0f,
			0.3125f,
			0.3125f,
			0f,
			0f,
			11f / 32f,
			0.8125f,
			0f,
			0f,
			0.375f,
			0.1875f,
			0f,
			0f,
			13f / 32f,
			0.6875f,
			0f,
			0f,
			0.4375f,
			0.4375f,
			0f,
			0f,
			15f / 32f,
			0.9375f,
			0f,
			0f,
			0.5f,
			1f / 32f,
			0f,
			0f,
			17f / 32f,
			17f / 32f,
			0f,
			0f,
			0.5625f,
			9f / 32f,
			0f,
			0f,
			19f / 32f,
			25f / 32f,
			0f,
			0f,
			0.625f,
			5f / 32f,
			0f,
			0f,
			21f / 32f,
			21f / 32f,
			0f,
			0f,
			0.6875f,
			13f / 32f,
			0f,
			0f,
			23f / 32f,
			29f / 32f,
			0f,
			0f,
			0.75f,
			3f / 32f,
			0f,
			0f,
			25f / 32f,
			19f / 32f,
			0f,
			0f,
			0.8125f,
			11f / 32f,
			0f,
			0f,
			27f / 32f,
			27f / 32f,
			0f,
			0f,
			0.875f,
			7f / 32f,
			0f,
			0f,
			29f / 32f,
			23f / 32f,
			0f,
			0f,
			0.9375f,
			15f / 32f,
			0f,
			0f,
			31f / 32f,
			31f / 32f,
			0f,
			0f
		};

		private static float[] k_Hammersley2dSeq64 = new float[256]
		{
			0f,
			0f,
			0f,
			0f,
			1f / 64f,
			0.5f,
			0f,
			0f,
			1f / 32f,
			0.25f,
			0f,
			0f,
			3f / 64f,
			0.75f,
			0f,
			0f,
			0.0625f,
			0.125f,
			0f,
			0f,
			5f / 64f,
			0.625f,
			0f,
			0f,
			3f / 32f,
			0.375f,
			0f,
			0f,
			7f / 64f,
			0.875f,
			0f,
			0f,
			0.125f,
			0.0625f,
			0f,
			0f,
			9f / 64f,
			0.5625f,
			0f,
			0f,
			5f / 32f,
			0.3125f,
			0f,
			0f,
			11f / 64f,
			0.8125f,
			0f,
			0f,
			0.1875f,
			0.1875f,
			0f,
			0f,
			13f / 64f,
			0.6875f,
			0f,
			0f,
			7f / 32f,
			0.4375f,
			0f,
			0f,
			15f / 64f,
			0.9375f,
			0f,
			0f,
			0.25f,
			1f / 32f,
			0f,
			0f,
			17f / 64f,
			17f / 32f,
			0f,
			0f,
			9f / 32f,
			9f / 32f,
			0f,
			0f,
			19f / 64f,
			25f / 32f,
			0f,
			0f,
			0.3125f,
			5f / 32f,
			0f,
			0f,
			21f / 64f,
			21f / 32f,
			0f,
			0f,
			11f / 32f,
			13f / 32f,
			0f,
			0f,
			23f / 64f,
			29f / 32f,
			0f,
			0f,
			0.375f,
			3f / 32f,
			0f,
			0f,
			25f / 64f,
			19f / 32f,
			0f,
			0f,
			13f / 32f,
			11f / 32f,
			0f,
			0f,
			27f / 64f,
			27f / 32f,
			0f,
			0f,
			0.4375f,
			7f / 32f,
			0f,
			0f,
			29f / 64f,
			23f / 32f,
			0f,
			0f,
			15f / 32f,
			15f / 32f,
			0f,
			0f,
			31f / 64f,
			31f / 32f,
			0f,
			0f,
			0.5f,
			1f / 64f,
			0f,
			0f,
			33f / 64f,
			33f / 64f,
			0f,
			0f,
			17f / 32f,
			17f / 64f,
			0f,
			0f,
			35f / 64f,
			49f / 64f,
			0f,
			0f,
			0.5625f,
			9f / 64f,
			0f,
			0f,
			37f / 64f,
			41f / 64f,
			0f,
			0f,
			19f / 32f,
			25f / 64f,
			0f,
			0f,
			39f / 64f,
			57f / 64f,
			0f,
			0f,
			0.625f,
			5f / 64f,
			0f,
			0f,
			41f / 64f,
			37f / 64f,
			0f,
			0f,
			21f / 32f,
			21f / 64f,
			0f,
			0f,
			43f / 64f,
			53f / 64f,
			0f,
			0f,
			0.6875f,
			13f / 64f,
			0f,
			0f,
			45f / 64f,
			45f / 64f,
			0f,
			0f,
			23f / 32f,
			29f / 64f,
			0f,
			0f,
			47f / 64f,
			61f / 64f,
			0f,
			0f,
			0.75f,
			3f / 64f,
			0f,
			0f,
			49f / 64f,
			35f / 64f,
			0f,
			0f,
			25f / 32f,
			19f / 64f,
			0f,
			0f,
			51f / 64f,
			51f / 64f,
			0f,
			0f,
			0.8125f,
			11f / 64f,
			0f,
			0f,
			53f / 64f,
			43f / 64f,
			0f,
			0f,
			27f / 32f,
			27f / 64f,
			0f,
			0f,
			55f / 64f,
			59f / 64f,
			0f,
			0f,
			0.875f,
			7f / 64f,
			0f,
			0f,
			57f / 64f,
			39f / 64f,
			0f,
			0f,
			29f / 32f,
			23f / 64f,
			0f,
			0f,
			59f / 64f,
			55f / 64f,
			0f,
			0f,
			0.9375f,
			15f / 64f,
			0f,
			0f,
			61f / 64f,
			47f / 64f,
			0f,
			0f,
			31f / 32f,
			31f / 64f,
			0f,
			0f,
			63f / 64f,
			63f / 64f,
			0f,
			0f
		};

		private static float[] k_Hammersley2dSeq256 = new float[1024]
		{
			0f,
			0f,
			0f,
			0f,
			0.00390625f,
			0.5f,
			0f,
			0f,
			1f / 128f,
			0.25f,
			0f,
			0f,
			0.01171875f,
			0.75f,
			0f,
			0f,
			1f / 64f,
			0.125f,
			0f,
			0f,
			0.01953125f,
			0.625f,
			0f,
			0f,
			3f / 128f,
			0.375f,
			0f,
			0f,
			0.02734375f,
			0.875f,
			0f,
			0f,
			1f / 32f,
			0.0625f,
			0f,
			0f,
			0.03515625f,
			0.5625f,
			0f,
			0f,
			5f / 128f,
			0.3125f,
			0f,
			0f,
			0.04296875f,
			0.8125f,
			0f,
			0f,
			3f / 64f,
			0.1875f,
			0f,
			0f,
			0.05078125f,
			0.6875f,
			0f,
			0f,
			7f / 128f,
			0.4375f,
			0f,
			0f,
			0.05859375f,
			0.9375f,
			0f,
			0f,
			0.0625f,
			1f / 32f,
			0f,
			0f,
			0.06640625f,
			17f / 32f,
			0f,
			0f,
			9f / 128f,
			9f / 32f,
			0f,
			0f,
			0.07421875f,
			25f / 32f,
			0f,
			0f,
			5f / 64f,
			5f / 32f,
			0f,
			0f,
			0.08203125f,
			21f / 32f,
			0f,
			0f,
			11f / 128f,
			13f / 32f,
			0f,
			0f,
			0.08984375f,
			29f / 32f,
			0f,
			0f,
			3f / 32f,
			3f / 32f,
			0f,
			0f,
			0.09765625f,
			19f / 32f,
			0f,
			0f,
			13f / 128f,
			11f / 32f,
			0f,
			0f,
			0.10546875f,
			27f / 32f,
			0f,
			0f,
			7f / 64f,
			7f / 32f,
			0f,
			0f,
			0.11328125f,
			23f / 32f,
			0f,
			0f,
			15f / 128f,
			15f / 32f,
			0f,
			0f,
			0.12109375f,
			31f / 32f,
			0f,
			0f,
			0.125f,
			1f / 64f,
			0f,
			0f,
			0.12890625f,
			33f / 64f,
			0f,
			0f,
			17f / 128f,
			17f / 64f,
			0f,
			0f,
			0.13671875f,
			49f / 64f,
			0f,
			0f,
			9f / 64f,
			9f / 64f,
			0f,
			0f,
			0.14453125f,
			41f / 64f,
			0f,
			0f,
			19f / 128f,
			25f / 64f,
			0f,
			0f,
			0.15234375f,
			57f / 64f,
			0f,
			0f,
			5f / 32f,
			5f / 64f,
			0f,
			0f,
			0.16015625f,
			37f / 64f,
			0f,
			0f,
			21f / 128f,
			21f / 64f,
			0f,
			0f,
			0.16796875f,
			53f / 64f,
			0f,
			0f,
			11f / 64f,
			13f / 64f,
			0f,
			0f,
			0.17578125f,
			45f / 64f,
			0f,
			0f,
			23f / 128f,
			29f / 64f,
			0f,
			0f,
			0.18359375f,
			61f / 64f,
			0f,
			0f,
			0.1875f,
			3f / 64f,
			0f,
			0f,
			0.19140625f,
			35f / 64f,
			0f,
			0f,
			25f / 128f,
			19f / 64f,
			0f,
			0f,
			0.19921875f,
			51f / 64f,
			0f,
			0f,
			13f / 64f,
			11f / 64f,
			0f,
			0f,
			0.20703125f,
			43f / 64f,
			0f,
			0f,
			27f / 128f,
			27f / 64f,
			0f,
			0f,
			0.21484375f,
			59f / 64f,
			0f,
			0f,
			7f / 32f,
			7f / 64f,
			0f,
			0f,
			0.22265625f,
			39f / 64f,
			0f,
			0f,
			29f / 128f,
			23f / 64f,
			0f,
			0f,
			0.23046875f,
			55f / 64f,
			0f,
			0f,
			15f / 64f,
			15f / 64f,
			0f,
			0f,
			0.23828125f,
			47f / 64f,
			0f,
			0f,
			31f / 128f,
			31f / 64f,
			0f,
			0f,
			0.24609375f,
			63f / 64f,
			0f,
			0f,
			0.25f,
			1f / 128f,
			0f,
			0f,
			0.25390625f,
			65f / 128f,
			0f,
			0f,
			33f / 128f,
			33f / 128f,
			0f,
			0f,
			0.26171875f,
			97f / 128f,
			0f,
			0f,
			17f / 64f,
			17f / 128f,
			0f,
			0f,
			0.26953125f,
			81f / 128f,
			0f,
			0f,
			35f / 128f,
			49f / 128f,
			0f,
			0f,
			0.27734375f,
			113f / 128f,
			0f,
			0f,
			9f / 32f,
			9f / 128f,
			0f,
			0f,
			0.28515625f,
			73f / 128f,
			0f,
			0f,
			37f / 128f,
			41f / 128f,
			0f,
			0f,
			0.29296875f,
			105f / 128f,
			0f,
			0f,
			19f / 64f,
			25f / 128f,
			0f,
			0f,
			0.30078125f,
			89f / 128f,
			0f,
			0f,
			39f / 128f,
			57f / 128f,
			0f,
			0f,
			0.30859375f,
			121f / 128f,
			0f,
			0f,
			0.3125f,
			5f / 128f,
			0f,
			0f,
			0.31640625f,
			69f / 128f,
			0f,
			0f,
			41f / 128f,
			37f / 128f,
			0f,
			0f,
			0.32421875f,
			101f / 128f,
			0f,
			0f,
			21f / 64f,
			21f / 128f,
			0f,
			0f,
			0.33203125f,
			85f / 128f,
			0f,
			0f,
			43f / 128f,
			53f / 128f,
			0f,
			0f,
			0.33984375f,
			117f / 128f,
			0f,
			0f,
			11f / 32f,
			13f / 128f,
			0f,
			0f,
			0.34765625f,
			77f / 128f,
			0f,
			0f,
			45f / 128f,
			45f / 128f,
			0f,
			0f,
			0.35546875f,
			109f / 128f,
			0f,
			0f,
			23f / 64f,
			29f / 128f,
			0f,
			0f,
			0.36328125f,
			93f / 128f,
			0f,
			0f,
			47f / 128f,
			61f / 128f,
			0f,
			0f,
			0.37109375f,
			125f / 128f,
			0f,
			0f,
			0.375f,
			3f / 128f,
			0f,
			0f,
			0.37890625f,
			67f / 128f,
			0f,
			0f,
			49f / 128f,
			35f / 128f,
			0f,
			0f,
			0.38671875f,
			99f / 128f,
			0f,
			0f,
			25f / 64f,
			19f / 128f,
			0f,
			0f,
			0.39453125f,
			83f / 128f,
			0f,
			0f,
			51f / 128f,
			51f / 128f,
			0f,
			0f,
			0.40234375f,
			115f / 128f,
			0f,
			0f,
			13f / 32f,
			11f / 128f,
			0f,
			0f,
			0.41015625f,
			75f / 128f,
			0f,
			0f,
			53f / 128f,
			43f / 128f,
			0f,
			0f,
			0.41796875f,
			107f / 128f,
			0f,
			0f,
			27f / 64f,
			27f / 128f,
			0f,
			0f,
			0.42578125f,
			91f / 128f,
			0f,
			0f,
			55f / 128f,
			59f / 128f,
			0f,
			0f,
			0.43359375f,
			123f / 128f,
			0f,
			0f,
			0.4375f,
			7f / 128f,
			0f,
			0f,
			0.44140625f,
			71f / 128f,
			0f,
			0f,
			57f / 128f,
			39f / 128f,
			0f,
			0f,
			0.44921875f,
			103f / 128f,
			0f,
			0f,
			29f / 64f,
			23f / 128f,
			0f,
			0f,
			0.45703125f,
			87f / 128f,
			0f,
			0f,
			59f / 128f,
			55f / 128f,
			0f,
			0f,
			0.46484375f,
			119f / 128f,
			0f,
			0f,
			15f / 32f,
			15f / 128f,
			0f,
			0f,
			0.47265625f,
			79f / 128f,
			0f,
			0f,
			61f / 128f,
			47f / 128f,
			0f,
			0f,
			0.48046875f,
			111f / 128f,
			0f,
			0f,
			31f / 64f,
			31f / 128f,
			0f,
			0f,
			0.48828125f,
			95f / 128f,
			0f,
			0f,
			63f / 128f,
			63f / 128f,
			0f,
			0f,
			0.49609375f,
			127f / 128f,
			0f,
			0f,
			0.5f,
			0.00390625f,
			0f,
			0f,
			0.50390625f,
			0.50390625f,
			0f,
			0f,
			65f / 128f,
			0.25390625f,
			0f,
			0f,
			0.51171875f,
			0.75390625f,
			0f,
			0f,
			33f / 64f,
			0.12890625f,
			0f,
			0f,
			0.51953125f,
			0.62890625f,
			0f,
			0f,
			67f / 128f,
			0.37890625f,
			0f,
			0f,
			0.52734375f,
			0.87890625f,
			0f,
			0f,
			17f / 32f,
			0.06640625f,
			0f,
			0f,
			0.53515625f,
			0.56640625f,
			0f,
			0f,
			69f / 128f,
			0.31640625f,
			0f,
			0f,
			0.54296875f,
			0.81640625f,
			0f,
			0f,
			35f / 64f,
			0.19140625f,
			0f,
			0f,
			0.55078125f,
			0.69140625f,
			0f,
			0f,
			71f / 128f,
			0.44140625f,
			0f,
			0f,
			0.55859375f,
			0.94140625f,
			0f,
			0f,
			0.5625f,
			0.03515625f,
			0f,
			0f,
			0.56640625f,
			0.53515625f,
			0f,
			0f,
			73f / 128f,
			0.28515625f,
			0f,
			0f,
			0.57421875f,
			0.78515625f,
			0f,
			0f,
			37f / 64f,
			0.16015625f,
			0f,
			0f,
			0.58203125f,
			0.66015625f,
			0f,
			0f,
			75f / 128f,
			0.41015625f,
			0f,
			0f,
			0.58984375f,
			0.91015625f,
			0f,
			0f,
			19f / 32f,
			0.09765625f,
			0f,
			0f,
			0.59765625f,
			0.59765625f,
			0f,
			0f,
			77f / 128f,
			0.34765625f,
			0f,
			0f,
			0.60546875f,
			0.84765625f,
			0f,
			0f,
			39f / 64f,
			0.22265625f,
			0f,
			0f,
			0.61328125f,
			0.72265625f,
			0f,
			0f,
			79f / 128f,
			0.47265625f,
			0f,
			0f,
			0.62109375f,
			0.97265625f,
			0f,
			0f,
			0.625f,
			0.01953125f,
			0f,
			0f,
			0.62890625f,
			0.51953125f,
			0f,
			0f,
			81f / 128f,
			0.26953125f,
			0f,
			0f,
			0.63671875f,
			0.76953125f,
			0f,
			0f,
			41f / 64f,
			0.14453125f,
			0f,
			0f,
			0.64453125f,
			0.64453125f,
			0f,
			0f,
			83f / 128f,
			0.39453125f,
			0f,
			0f,
			0.65234375f,
			0.89453125f,
			0f,
			0f,
			21f / 32f,
			0.08203125f,
			0f,
			0f,
			0.66015625f,
			0.58203125f,
			0f,
			0f,
			85f / 128f,
			0.33203125f,
			0f,
			0f,
			0.66796875f,
			0.83203125f,
			0f,
			0f,
			43f / 64f,
			0.20703125f,
			0f,
			0f,
			0.67578125f,
			0.70703125f,
			0f,
			0f,
			87f / 128f,
			0.45703125f,
			0f,
			0f,
			0.68359375f,
			0.95703125f,
			0f,
			0f,
			0.6875f,
			0.05078125f,
			0f,
			0f,
			0.69140625f,
			0.55078125f,
			0f,
			0f,
			89f / 128f,
			0.30078125f,
			0f,
			0f,
			0.69921875f,
			0.80078125f,
			0f,
			0f,
			45f / 64f,
			0.17578125f,
			0f,
			0f,
			0.70703125f,
			0.67578125f,
			0f,
			0f,
			91f / 128f,
			0.42578125f,
			0f,
			0f,
			0.71484375f,
			0.92578125f,
			0f,
			0f,
			23f / 32f,
			0.11328125f,
			0f,
			0f,
			0.72265625f,
			0.61328125f,
			0f,
			0f,
			93f / 128f,
			0.36328125f,
			0f,
			0f,
			0.73046875f,
			0.86328125f,
			0f,
			0f,
			47f / 64f,
			0.23828125f,
			0f,
			0f,
			0.73828125f,
			0.73828125f,
			0f,
			0f,
			95f / 128f,
			0.48828125f,
			0f,
			0f,
			0.74609375f,
			0.98828125f,
			0f,
			0f,
			0.75f,
			0.01171875f,
			0f,
			0f,
			0.75390625f,
			0.51171875f,
			0f,
			0f,
			97f / 128f,
			0.26171875f,
			0f,
			0f,
			0.76171875f,
			0.76171875f,
			0f,
			0f,
			49f / 64f,
			0.13671875f,
			0f,
			0f,
			0.76953125f,
			0.63671875f,
			0f,
			0f,
			99f / 128f,
			0.38671875f,
			0f,
			0f,
			0.77734375f,
			0.88671875f,
			0f,
			0f,
			25f / 32f,
			0.07421875f,
			0f,
			0f,
			0.78515625f,
			0.57421875f,
			0f,
			0f,
			101f / 128f,
			0.32421875f,
			0f,
			0f,
			0.79296875f,
			0.82421875f,
			0f,
			0f,
			51f / 64f,
			0.19921875f,
			0f,
			0f,
			0.80078125f,
			0.69921875f,
			0f,
			0f,
			103f / 128f,
			0.44921875f,
			0f,
			0f,
			0.80859375f,
			0.94921875f,
			0f,
			0f,
			0.8125f,
			0.04296875f,
			0f,
			0f,
			0.81640625f,
			0.54296875f,
			0f,
			0f,
			105f / 128f,
			0.29296875f,
			0f,
			0f,
			0.82421875f,
			0.79296875f,
			0f,
			0f,
			53f / 64f,
			0.16796875f,
			0f,
			0f,
			0.83203125f,
			0.66796875f,
			0f,
			0f,
			107f / 128f,
			0.41796875f,
			0f,
			0f,
			0.83984375f,
			0.91796875f,
			0f,
			0f,
			27f / 32f,
			0.10546875f,
			0f,
			0f,
			0.84765625f,
			0.60546875f,
			0f,
			0f,
			109f / 128f,
			0.35546875f,
			0f,
			0f,
			0.85546875f,
			0.85546875f,
			0f,
			0f,
			55f / 64f,
			0.23046875f,
			0f,
			0f,
			0.86328125f,
			0.73046875f,
			0f,
			0f,
			111f / 128f,
			0.48046875f,
			0f,
			0f,
			0.87109375f,
			0.98046875f,
			0f,
			0f,
			0.875f,
			0.02734375f,
			0f,
			0f,
			0.87890625f,
			0.52734375f,
			0f,
			0f,
			113f / 128f,
			0.27734375f,
			0f,
			0f,
			0.88671875f,
			0.77734375f,
			0f,
			0f,
			57f / 64f,
			0.15234375f,
			0f,
			0f,
			0.89453125f,
			0.65234375f,
			0f,
			0f,
			115f / 128f,
			0.40234375f,
			0f,
			0f,
			0.90234375f,
			0.90234375f,
			0f,
			0f,
			29f / 32f,
			0.08984375f,
			0f,
			0f,
			0.91015625f,
			0.58984375f,
			0f,
			0f,
			117f / 128f,
			0.33984375f,
			0f,
			0f,
			0.91796875f,
			0.83984375f,
			0f,
			0f,
			59f / 64f,
			0.21484375f,
			0f,
			0f,
			0.92578125f,
			0.71484375f,
			0f,
			0f,
			119f / 128f,
			0.46484375f,
			0f,
			0f,
			0.93359375f,
			0.96484375f,
			0f,
			0f,
			0.9375f,
			0.05859375f,
			0f,
			0f,
			0.94140625f,
			0.55859375f,
			0f,
			0f,
			121f / 128f,
			0.30859375f,
			0f,
			0f,
			0.94921875f,
			0.80859375f,
			0f,
			0f,
			61f / 64f,
			0.18359375f,
			0f,
			0f,
			0.95703125f,
			0.68359375f,
			0f,
			0f,
			123f / 128f,
			0.43359375f,
			0f,
			0f,
			0.96484375f,
			0.93359375f,
			0f,
			0f,
			31f / 32f,
			0.12109375f,
			0f,
			0f,
			0.97265625f,
			0.62109375f,
			0f,
			0f,
			125f / 128f,
			0.37109375f,
			0f,
			0f,
			0.98046875f,
			0.87109375f,
			0f,
			0f,
			63f / 64f,
			0.24609375f,
			0f,
			0f,
			0.98828125f,
			0.74609375f,
			0f,
			0f,
			127f / 128f,
			0.49609375f,
			0f,
			0f,
			0.99609375f,
			0.99609375f,
			0f,
			0f
		};

		private static readonly int s_hammersley2DSeq16Id = Shader.PropertyToID("Hammersley2dSeq16");

		private static readonly int s_hammersley2DSeq32Id = Shader.PropertyToID("Hammersley2dSeq32");

		private static readonly int s_hammersley2DSeq64Id = Shader.PropertyToID("Hammersley2dSeq64");

		private static readonly int s_hammersley2DSeq256Id = Shader.PropertyToID("Hammersley2dSeq256");

		public unsafe static void Initialize()
		{
			Hammersley2dSeq16 data = default(Hammersley2dSeq16);
			Hammersley2dSeq32 data2 = default(Hammersley2dSeq32);
			Hammersley2dSeq64 data3 = default(Hammersley2dSeq64);
			Hammersley2dSeq256 data4 = default(Hammersley2dSeq256);
			for (int i = 0; i < k_Hammersley2dSeq16.Length; i++)
			{
				data.hammersley2dSeq16[i] = k_Hammersley2dSeq16[i];
			}
			for (int j = 0; j < k_Hammersley2dSeq32.Length; j++)
			{
				data2.hammersley2dSeq32[j] = k_Hammersley2dSeq32[j];
			}
			for (int k = 0; k < k_Hammersley2dSeq64.Length; k++)
			{
				data3.hammersley2dSeq64[k] = k_Hammersley2dSeq64[k];
			}
			for (int l = 0; l < k_Hammersley2dSeq256.Length; l++)
			{
				data4.hammersley2dSeq256[l] = k_Hammersley2dSeq256[l];
			}
			ConstantBuffer.UpdateData(in data);
			ConstantBuffer.UpdateData(in data2);
			ConstantBuffer.UpdateData(in data3);
			ConstantBuffer.UpdateData(in data4);
		}

		public static void BindConstants(CommandBuffer cmd, ComputeShader cs)
		{
			ConstantBuffer.Set<Hammersley2dSeq16>(cmd, cs, s_hammersley2DSeq16Id);
			ConstantBuffer.Set<Hammersley2dSeq32>(cmd, cs, s_hammersley2DSeq32Id);
			ConstantBuffer.Set<Hammersley2dSeq64>(cmd, cs, s_hammersley2DSeq64Id);
			ConstantBuffer.Set<Hammersley2dSeq256>(cmd, cs, s_hammersley2DSeq256Id);
		}
	}
}
