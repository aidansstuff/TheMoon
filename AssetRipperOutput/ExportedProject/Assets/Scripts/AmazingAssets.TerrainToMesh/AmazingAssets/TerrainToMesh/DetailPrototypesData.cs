using System.Collections.Generic;
using UnityEngine;

namespace AmazingAssets.TerrainToMesh
{
	public class DetailPrototypesData
	{
		public DetailPrototype detailPrototype;

		public int prototypeIndex;

		public List<Vector3> position;

		public List<Vector3> surfaceNormal;

		public List<Vector3> scale;

		public List<Color> healthDryColor;

		public DetailPrototypesData(DetailPrototype P_0, int P_1, Vector3 P_2, Vector3 P_3)
		{
			prototypeIndex = P_1;
			detailPrototype = _200E_200C_200F_206F_202A_202A_200F_206E_202C_200F_200E_202E_200D_202D_206D_200D_200B_200E_206E_200E_206D_202B_206B_200C_200E_206B_202E_202B_206A_206A_206D_202A_202A_206A_200B_200B_206A_206D_200E_202D_202E(P_0);
			position = new List<Vector3>();
			surfaceNormal = new List<Vector3>();
			scale = new List<Vector3>();
			healthDryColor = new List<Color>();
			Add(P_2, P_3);
		}

		public void Add(Vector3 position, Vector3 surfaceNormal)
		{
			this.position.Add(position);
			float num3 = default(float);
			float t = default(float);
			float y = default(float);
			while (true)
			{
				int num = -813065909;
				while (true)
				{
					uint num2;
					switch ((num2 = (uint)num ^ 0xDBA5A14Du) % 8)
					{
					case 2u:
						break;
					default:
						return;
					case 5u:
						num3 = Mathf.Lerp(_206C_200C_200F_200E_206E_206C_202E_202D_202E_200F_206B_206B_200F_200C_206E_200F_202A_202E_202E_206E_200B_206E_206C_200D_200B_200B_206D_202C_206F_206C_206B_200B_200C_200D_200B_200F_206C_206D_200E_206C_202E(detailPrototype), _200B_206F_202B_206F_206D_200D_200C_206C_200E_202C_202C_206B_202C_202C_206A_200E_202D_202C_202B_202E_202D_202E_200F_206B_202D_200D_202B_200F_206C_206B_202C_200D_202B_202D_200C_202E_200E_200D_200E_206C_202E(detailPrototype), t);
						num = ((int)num2 * -276478165) ^ -613858514;
						continue;
					case 4u:
						y = Mathf.Lerp(_206A_202D_206F_200D_202B_200D_200F_202B_206F_206B_206C_200D_202E_200C_206B_202D_200D_206F_200B_206C_206A_200E_206B_202D_206A_206B_202A_202B_200C_202D_200E_200C_206B_202A_200E_206A_202A_200F_206C_200C_202E(detailPrototype), _206C_200B_200D_206E_200D_206A_202B_206D_200D_200F_200C_202E_206A_200C_202C_206D_206A_206B_200D_202C_202A_200C_202C_202D_206D_206D_206A_206E_200C_200B_202C_202E_200F_200B_206B_200E_206F_206F_206D_200E_202E(detailPrototype), t);
						num = ((int)num2 * -1740386895) ^ -1352970566;
						continue;
					case 1u:
						healthDryColor.Add(Color.Lerp(_206F_206A_206A_202C_200D_200B_206C_206A_202C_206D_206D_200E_202E_206B_206A_202E_206C_202E_202E_200D_200D_202B_200C_200D_206E_202A_200C_202A_206D_202B_202B_206C_206E_202A_206A_206A_206B_206C_200E_202C_202E(detailPrototype), _202E_206A_200E_200B_202D_202C_202A_206B_206B_200F_206F_206E_202A_206B_206F_200F_200E_200E_206D_206E_206F_206A_202C_206D_206E_202C_206D_200B_206A_206A_202A_200F_202C_206C_200C_206E_200D_206F_206C_202D_202E(detailPrototype), t));
						num = (int)((num2 * 253837944) ^ 0x733696CD);
						continue;
					case 7u:
						t = Mathf.PerlinNoise(position.x * _200F_202C_206B_206B_206E_206D_206E_206E_200C_206E_206C_200B_200D_206D_202A_206F_200B_206A_206D_206B_202B_200B_206D_200C_202B_202A_200B_202A_200D_206E_206A_206C_200C_206E_200F_200B_206C_202E_202C_206E_202E(detailPrototype), position.z * _200F_202C_206B_206B_206E_206D_206E_206E_200C_206E_206C_200B_200D_206D_202A_206F_200B_206A_206D_206B_202B_200B_206D_200C_202B_202A_200B_202A_200D_206E_206A_206C_200C_206E_200F_200B_206C_202E_202C_206E_202E(detailPrototype));
						num = ((int)num2 * -558330061) ^ 0x1B6AFCBD;
						continue;
					case 6u:
						this.surfaceNormal.Add(surfaceNormal);
						num = (int)(num2 * 1506200789) ^ -1227686420;
						continue;
					case 3u:
						scale.Add(new Vector3(num3, y, num3));
						num = ((int)num2 * -1662248742) ^ -1384208950;
						continue;
					case 0u:
						return;
					}
					break;
				}
			}
		}

		static DetailPrototype _200E_200C_200F_206F_202A_202A_200F_206E_202C_200F_200E_202E_200D_202D_206D_200D_200B_200E_206E_200E_206D_202B_206B_200C_200E_206B_202E_202B_206A_206A_206D_202A_202A_206A_200B_200B_206A_206D_200E_202D_202E(DetailPrototype P_0)
		{
			return new DetailPrototype(P_0);
		}

		static float _200F_202C_206B_206B_206E_206D_206E_206E_200C_206E_206C_200B_200D_206D_202A_206F_200B_206A_206D_206B_202B_200B_206D_200C_202B_202A_200B_202A_200D_206E_206A_206C_200C_206E_200F_200B_206C_202E_202C_206E_202E(DetailPrototype P_0)
		{
			return P_0.noiseSpread;
		}

		static float _206C_200C_200F_200E_206E_206C_202E_202D_202E_200F_206B_206B_200F_200C_206E_200F_202A_202E_202E_206E_200B_206E_206C_200D_200B_200B_206D_202C_206F_206C_206B_200B_200C_200D_200B_200F_206C_206D_200E_206C_202E(DetailPrototype P_0)
		{
			return P_0.minWidth;
		}

		static float _200B_206F_202B_206F_206D_200D_200C_206C_200E_202C_202C_206B_202C_202C_206A_200E_202D_202C_202B_202E_202D_202E_200F_206B_202D_200D_202B_200F_206C_206B_202C_200D_202B_202D_200C_202E_200E_200D_200E_206C_202E(DetailPrototype P_0)
		{
			return P_0.maxWidth;
		}

		static float _206A_202D_206F_200D_202B_200D_200F_202B_206F_206B_206C_200D_202E_200C_206B_202D_200D_206F_200B_206C_206A_200E_206B_202D_206A_206B_202A_202B_200C_202D_200E_200C_206B_202A_200E_206A_202A_200F_206C_200C_202E(DetailPrototype P_0)
		{
			return P_0.minHeight;
		}

		static float _206C_200B_200D_206E_200D_206A_202B_206D_200D_200F_200C_202E_206A_200C_202C_206D_206A_206B_200D_202C_202A_200C_202C_202D_206D_206D_206A_206E_200C_200B_202C_202E_200F_200B_206B_200E_206F_206F_206D_200E_202E(DetailPrototype P_0)
		{
			return P_0.maxHeight;
		}

		static Color _206F_206A_206A_202C_200D_200B_206C_206A_202C_206D_206D_200E_202E_206B_206A_202E_206C_202E_202E_200D_200D_202B_200C_200D_206E_202A_200C_202A_206D_202B_202B_206C_206E_202A_206A_206A_206B_206C_200E_202C_202E(DetailPrototype P_0)
		{
			return P_0.dryColor;
		}

		static Color _202E_206A_200E_200B_202D_202C_202A_206B_206B_200F_206F_206E_202A_206B_206F_200F_200E_200E_206D_206E_206F_206A_202C_206D_206E_202C_206D_200B_206A_206A_202A_200F_202C_206C_200C_206E_200D_206F_206C_202D_202E(DetailPrototype P_0)
		{
			return P_0.healthyColor;
		}
	}
}
